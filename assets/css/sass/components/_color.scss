// Utility Color Classes

//.success {
//
//}

// Google Color Palette defined: http://www.google.com/design/spec/style/color.html

/*
Limit the selection of primary and secondary colors
*/

// Primary colors 
$indigo: (
  "lighten-2":  #7986cb,
  "base":       #3f51b5,
  "darken-3":   #283593
);

// Base for error, accents for link normal and hover 
$red: (
  "base":       #F44336,
  "accent-2":   #FF5252,
  "accent-4":   #D50000
);

// Success color
$green: (
  "base":       #4CAF50
);

// Form color - unused
$grey: (
  "base":       #9e9e9e
);

$shades: (
  "black":        #000000,
  "white":        #FFFFFF,
  "transparent":  transparent
);

$colors: (
  "indigo": $indigo,
  "red": $red,
  "green": $green,
  "grey": $grey,
  "shades": $shades
);


// Color Classes

@each $color_name, $color in $colors {
  @each $color_type, $color_value in $color {
    @if $color_type == "base" {
      .#{$color_name} {
        background-color: $color_value !important;
      }
      .#{$color_name}-text {
        color: $color_value !important;
      }
    }
    @else {
      .#{$color_name}.#{$color_type} {
        background-color: $color_value !important;
      }
      .#{$color_name}-text.text-#{$color_type} {
        color: $color_value !important;
      }
    }
  }
}

// Shade classes
@each $color, $color_value in $shades {
  .#{$color} {
    background-color: $color_value !important;
  }
  .#{$color}-text {
    color: $color_value !important;
  }
}


// usage: color("name_of_color", "type_of_color")
// to avoid to repeating map-get($colors, ...)

@function color($color, $type) {
  @if map-has-key($colors, $color) {
    $curr_color: map-get($colors, $color);
    @if map-has-key($curr_color, $type) {
      @return map-get($curr_color, $type);
    }
  }
  @warn "Unknown `#{name}` in $colors.";
  @return null;
}

